swagger: "2.0"
info:
  description: "科技平台API说明"
  version: "1.0.0"
  title: "Technology Platform API Spec"
host: "technologyplatform.liyafei.top"
basePath: "/api/v1"
tags:
  - name: "用户模块"
  - name: "管理员模块"
  - name: "科技模块"
  - name: "文章模块"
  - name: "文件模块"
schemes:
  - "http"
paths:
  /user/register:
    post:
      tags:
        - "用户模块"
      summary: "用户注册"
      description: "提供给用户注册账号"
      parameters:
        - in: "body"
          name: "body"
          description: "注册参数"
          required: true
          schema:
            $ref: "#/definitions/RegisterModel"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/RegisterResponse"
  /user/login:
    post:
      tags:
        - "用户模块"
      summary: "用户登陆"
      description: "提供给用户登陆,成功返回token"
      parameters:
        - in: "body"
          name: "body"
          description: "登陆参数"
          required: true
          schema:
            $ref: "#/definitions/LoginModel"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/LoginResponse"
  /user/addOrUpdateInfo:
    post:
      tags:
        - "用户模块"
      summary: "更新用户信息"
      description: "根据用户ID更新用户信息"
      parameters:
        - in: header
          name: "token"
          description: "Security token"
          required: true
          schema:
            properties:
              token:
                type: string
                description: "token"
        - in: "body"
          name: "body"
          description: "用户信息参数"
          required: false
          schema:
            $ref: "#/definitions/AddOrUpdateUserInfoModel"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/AddOrUpdateUserInfoResponse"
        401:
          description: "token invalid"
  /user/getUserInfo/{userId}:
    get:
      tags:
        - "用户模块"
      summary: "获得单个用户信息"
      description: "根据用户ID拿到某个用户的非敏感信息(头像、昵称、简介等)"
      parameters:
        - in: path
          name: "userId"
          description: "用户ID"
          required: true
          type: string
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/GetUserInfoResponse"
  /admin/getUsers:
    post:
      tags:
        - "管理员模块"
      summary: "分页获取用户列表"
      description: "后台分页获取全部用户列表"
      parameters:
        - in: header
          name: "token"
          description: "Security token"
          required: true
          schema:
            properties:
              token:
                type: string
                description: "token"
        - in: body
          name: "body"
          required: true
          description: "分页参数"
          schema:
            $ref: "#/definitions/GetUsersModel"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/GetUsersResponse"
        401:
          description: "token invalid"
  /admin/updateUserStatus:
    post:
      tags:
        - "管理员模块"
      summary: "禁封/解封用户账号"
      description: "管理员有权限禁封、解封用户账号"
      parameters:
        - in: header
          name: "token"
          description: "Security token"
          required: true
          schema:
            properties:
              token:
                type: string
                description: "token"
        - in: body
          name: "body"
          description: "参数"
          schema:
            properties:
              userId:
                type: string
                description: "当前账号ID"
              targetUserId:
                type: string
                description: "目标账号ID"
              status:
                type: integer
                description: "0 封禁 1 正常"
                default: 0
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/UpdateUserStatusResponse"
  /admin/getTechnologys:
    post:
      tags:
        - "管理员模块"
      summary: "分页获取科技列表"
      description: "后台分页获取全部科技模块"
      parameters:
        - in: header
          name: "token"
          description: "Security token"
          required: true
          schema:
            properties:
              token:
                type: string
                description: "token"
        - in: body
          name: "body"
          required: true
          description: "分页参数"
          schema:
            $ref: "#/definitions/GetTechnologiesModel"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/GetTechnologiesResponse"
  /admin/getArticles:
    post:
      tags:
        - "管理员模块"
      summary: "分页获取文章列表"
      description: "后台分页获取全部文章"
      parameters:
        - in: header
          name: "token"
          description: "Security token"
          required: true
          schema:
            properties:
              token:
                type: string
                description: "token"
        - in: body
          name: "body"
          required: true
          description: "分页参数"
          schema:
            $ref: "#/definitions/GetArticlesModel"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/GetTechnologiesResponse"
  /admin/uploadTechnology:
    post:
      tags:
        - "管理员模块"
      summary: "发布科技"
      description: "管理员发布科技"
      parameters:
        - in: header
          name: "token"
          description: "Security token"
          required: true
          schema:
            properties:
              token:
                type: string
                description: "token"
        - in: body
          name: "body"
          required: true
          description: "上传参数"
          schema:
            $ref: "#/definitions/TechnologyModel"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/UploadTechnologyResponse"
  /admin/updateTechnology:
    put:
      tags:
        - "管理员模块"
      summary: "更新科技"
      description: "管理员更新科技"
      parameters:
        - in: header
          name: "token"
          description: "Security token"
          required: true
          schema:
            properties:
              token:
                type: string
                description: "token"
        - in: body
          name: "body"
          required: true
          description: "更新参数。ID必传"
          schema:
            $ref: "#/definitions/TechnologyModel"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/UploadTechnologyResponse"
  /admin/deleteTechnology:
    delete:
      tags:
        - "管理员模块"
      summary: "删除科技"
      description: "删除已发布科技"
      parameters:
        - in: header
          name: "token"
          description: "Security token"
          required: true
          schema:
            properties:
              token:
                type: string
                description: "token"
        - in: body
          name: "body"
          required: true
          description: "删除依据科技ID"
          schema:
            properties:
              technologyId:
                type: string
                description: "科技ID"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/DeleteTechnologyResponse"
  /admin/updateArticleStatus:
    put:
      tags:
        - "管理员模块"
      summary: "审核文章"
      description: "更新文章状态"
      parameters:
        - in: header
          name: "token"
          description: "Security token"
          required: true
          schema:
            properties:
              token:
                type: string
                description: "token"
        - in: body
          name: "body"
          required: true
          description: "更新文章ID"
          schema:
            properties:
              atricleId:
                type: string
                description: "要更新的文章的ID"
              status:
                type: integer
                description: "更新文章的状态 0待审核 1 发布 -1 删除"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/UpdateArticleStatusResponse"
  /technology/getTechnologys:
    get:
      tags:
        - "科技模块"
      summary: "分页获取科技"
      description: "分页获取依据时间排序的科技"
      parameters:
        - in: query
          name: "query"
          required: true
          description: "分页获取科技参数(默认依据时间排序)"
          schema:
            properties:
              limit:
                type: integer
                description: "分页容量"
              offest:
                type: integer
                description: "分页偏移量"
      responses:
        200:
          description: "success"
          schema:
            properties:
              code:
                type: integer
                default: 200
              message:
                type: string
                default: "success"
              data:
                properties:
                  technologys:
                    type: object
                    properties:
                      0:
                        type: object
                        $ref: "#/definitions/TechnologyModel"
  /technology/get:
    get:
      tags:
      - "科技模块"
      summary: "获取科技详情"
      description: "更具ID获取科技详情"
      parameters:
        - in: body
          name: "body"
          required: true
          description: "获取科技详情参数"
          schema:
            properties:
              id:
                type: integer
                description: "科技ID"
      responses:
        200:
          description: "success"
          schema:
            properties:
              code:
                type: integer
                default: 200
              message:
                type: string
                default: "success"
              data:
                $ref: "#/definitions/TechnologyModel"
definitions:
  RegisterModel:
    type: object
    properties:
      id:
        type: "string"
        description: "用户ID"
      username:
        type: "string"
        description: "用户账号"
        minLength: 8
        maxLength: 16
      password:
        type: "string"
        description: "用户密码"
        minLength: 8
        maxLength: 16
      status:
        type: integer
        description: "用户状态 1 可用 0 禁封"
        default: 1
  LoginModel:
    type: object
    properties:
      username:
        type: "string"
        description: "用户账号"
        minLength: 8
        maxLength: 16
      password:
        type: "string"
        description: "用户密码"
        minLength: 8
        maxLength: 16
  AddOrUpdateUserInfoModel:
    type: object
    properties:
      name:
        type: string
        description: "用户昵称"
      avatar:
        type: string
        description: "用户头像"
      introduce:
        type: string
        description: "用户简介"
  UserInfoModel:
    type: object
    properties:
      user_id:
        type: string
        description: "用户ID"
      name:
        type: string
        description: "用户昵称"
      avatar:
        type: string
        description: "用户头像"
      introduce:
        type: string
        description: "用户简介"
      createAt:
        type: string
        description: "创建时间"
      updateAt:
        type: string
        description: "更新时间"
  AdminUserInfoModel:
    type: object
    properties:
      user_id:
        type: string
        description: "用户ID"
      username:
        type: string
        description: "用户名"
      name:
        type: string
        description: "用户昵称"
      avatar:
        type: string
        description: "用户头像"
      introduce:
        type: string
        description: "用户简介"
      createAt:
        type: string
        description: "创建时间"
      updateAt:
        type: string
        description: "更新时间"
  GetUsersModel:
    type: object
    properties:
      limit:
        type: integer
        description: "分页容量"
      offset:
        type: integer
        description: "偏置量"
      status:
        type: integer
        description: "账号状态: 1可用 0禁封"
  GetTechnologiesModel:
    type: object
    properties:
      limit:
        type: integer
        description: "分页容量"
      offset:
        type: integer
        description: "偏置量"
      userId:
        type: string
        description: "可选,查询某账号发布的科技时"
  GetArticlesModel:
    type: object
    properties:
      limit:
        type: integer
        description: "分页容量"
      offset:
        type: integer
        description: "偏置量"
      userId:
        type: string
        description: "可选,查询某账号发表的文章时"
      technologyId:
        type: integer
        description: "可选,查询某科技关联的文章时"
      status:
        type: integer
        description: "文章状态 0待审核 1 发布 -1 删除"
  TechnologyModel:
    type: object
    properties:
      id:
        type: integer
        description: "科技ID"
      name:
        type: string
        description: "科技名称"
      summary:
        type: string
        description: "科技简介"
      image:
        type: object
        description: "封面url"
      imageType:
        type: integer
        description: "封面类型 0 无封面 1 单封面 "
      context:
        type: string
        description: "科技内容"
      userId:
        type: string
        description: "发布者ID"
      createAt:
        type: string
        description: "创建时间"
      updateAt:
        type: string
        description: "更新时间"
  ArticleModel:
    type: object
    properties:
      id:
        type: integer
        description: "文章ID"
      title:
        type: string
        description: "文章标题"
      context:
        type: string
        description: "文章内容"
      userId:
        type: string
        description: "发布者用户ID"
      status:
        type: integer
        description: "文章状态"
      createAt:
        type: string
        description: "创建时间"
      updateAt:
        type: string
        description: "更新时间"
  RegisterResponse:
    type: object
    properties:
      code:
        type: integer
        description: "返回码,200 表示正常，500 表示异常"
        default: 200
      message:
        type: string
        description: "返回信息"
        default: "success"
      data:
        type: object
        properties:
          userId:
            type: string
            description: "返回用户ID"
  LoginResponse:
    type: object
    properties:
      code:
        type: integer
        description: "返回码,200 表示正常，500 表示异常"
        default: 200
      message:
        type: string
        description: "返回信息，成功返回success,失败返回err"
        default: "success"
      data:
        type: object
        properties:
          token:
            type: string
            description: "返回token"
          userId:
            type: string
            description: "返回用户ID"
          status:
            type: integer
            description: "账号状态0 未添加用户信息"
  AddOrUpdateUserInfoResponse:
    type: object
    properties:
      code:
        type: integer
        description: "返回码,200 表示正常，500 表示异常"
        default: 200
      message:
        type: string
        description: "返回信息，成功返回success,失败返回err"
        default: "success"
      data:
        type: object
        properties:
          userInfo:
            $ref: "#/definitions/UserInfoModel"
  GetUserInfoResponse:
    type: object
    properties:
      code:
        type: integer
        description: "返回码,200 表示正常，500 表示异常"
        default: 200
      message:
        type: string
        description: "返回信息，成功返回success,失败返回err"
        default: "success"
      data:
        type: object
        properties:
          userInfo:
            $ref: "#/definitions/UserInfoModel"
  GetUsersResponse:
    type: object
    properties:
      code:
        type: integer
        description: "返回码,200 表示正常，500 表示异常"
        default: 200
      message:
        type: string
        description: "返回信息，成功返回success,失败返回err"
        default: "success"
      data:
        type: object
        properties:
          userList:
            properties:
              0:
                $ref: "#/definitions/AdminUserInfoModel"
  UpdateUserStatusResponse:
    type: object
    properties:
      code:
        type: integer
        description: "返回码,200 表示正常，500 表示异常"
        default: 200
      message:
        type: string
        description: "返回信息，成功返回success,失败返回err"
        default: "success"
  GetTechnologiesResponse:
    type: object
    properties:
      code:
        type: integer
        description: "返回码,200 表示正常，500 表示异常"
        default: 200
      message:
        type: string
        description: "返回信息，成功返回success,失败返回err"
        default: "success"
      data:
        type: object
        properties:
          technologyList:
            type: object
            properties:
              0:
                $ref: "#/definitions/TechnologyModel"
  GetArticlesResponse:
    type: object
    properties:
      code:
        type: integer
        description: "返回码,200 表示正常，500 表示异常"
        default: 200
      message:
        type: string
        description: "返回信息，成功返回success,失败返回err"
        default: "success"
      data:
        type: object
        properties:
          technologyList:
            type: object
            properties:
              0:
                $ref: "#/definitions/ArticleModel"
  UploadTechnologyResponse:
    type: object
    properties:
      code:
        type: integer
        description: "返回码,200 表示正常，500 表示异常"
        default: 200
      message:
        type: string
        description: "返回信息，成功返回success,失败返回err"
        default: "success"
      data:
        type: object
        properties:
          technology:
            $ref: "#/definitions/TechnologyModel"
  DeleteTechnologyResponse:
    type: object
    properties:
      code:
        type: integer
        description: "返回码,200 表示正常，500 表示异常"
        default: 200
      message:
        type: string
        description: "返回信息，成功返回success,失败返回err"
        default: "success"
  UpdateArticleStatusResponse:
    type: object
    properties:
      code:
        type: integer
        description: "返回码,200 表示正常，500 表示异常"
        default: 200
      message:
        type: string
        description: "返回信息，成功返回success,失败返回err"
        default: "success"
      date:
        type: object
        properties:
          status:
            type: integer
            description: "修改后的状态"